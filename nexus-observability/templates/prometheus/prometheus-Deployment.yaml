{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prometheus.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nexus-observability.prometheus.labels" . | nindent 4 }}
    app: {{ .Values.prometheus.name }}
spec:
  replicas: {{ .Values.prometheus.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.prometheus.name }}
  template:
    metadata:
      labels:
        {{- include "nexus-observability.prometheus.labels" . | nindent 8 }}
        app: {{ .Values.prometheus.name }}
    spec:
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.prometheus.name }}
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time={{ .Values.prometheus.storage.retention }}'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
            - '--web.enable-remote-write-receiver'
            - '--log.level=info'
          ports:
            - name: web
              containerPort: {{ .Values.prometheus.service.port }}
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: {{ .Values.prometheus.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: {{ .Values.prometheus.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /-/ready
              port: {{ .Values.prometheus.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: {{ .Values.prometheus.name }}-config
        - name: prometheus-storage-volume
          {{- if .Values.prometheus.storage.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.prometheus.name }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}