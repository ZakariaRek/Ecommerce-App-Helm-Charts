global:
  namespace: tools
  environment: production
  storageClass: standard
  nodeSelector:
    node-role: infrastructure

  # Global resource defaults
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# Kafka UI Configuration
kafkaUI:
  enabled: true
  name: kafka-ui
  image:
    repository: provectuslabs/kafka-ui
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 8080

  config:
    kafka:
      bootstrapServers: "kafka-service.data.svc.cluster.local:9092"
      zookeeper: "zookeeper-service.data.svc.cluster.local:2181"

# Prometheus Configuration
prometheus:
  enabled: true
  name: prometheus
  image:
    repository: prom/prometheus
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  service:
    type: ClusterIP
    port: 9090

  storage:
    enabled: true
    size: 10Gi

  config:
    scrapeInterval: "15s"
    evaluationInterval: "15s"
    retention: "30d"

# Grafana Configuration
grafana:
  enabled: true
  name: grafana
  image:
    repository: grafana/grafana
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 3000

  storage:
    enabled: true
    size: 5Gi

  config:
    adminUser: "admin"
    adminPassword: "admin123"  # Change in production
    datasources:
      prometheus:
        enabled: true
        url: "http://prometheus.tools.svc.cluster.local:9090"

# Swagger UI Configuration
swaggerUI:
  enabled: true
  name: swagger-ui
  image:
    repository: swaggerapi/swagger-ui
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"

  service:
    type: ClusterIP
    port: 8080

  config:
    apiUrl: "http://api-gateway.infrastructure.svc.cluster.local:8099/v3/api-docs"

# Adminer Configuration (Database Admin Tool)
adminer:
  enabled: true
  name: adminer
  image:
    repository: adminer
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"

  service:
    type: ClusterIP
    port: 8080

  config:
    design: "hydra"  # Default theme

# pgAdmin Configuration (PostgreSQL Admin)
pgAdmin:
  enabled: true
  name: pgadmin
  image:
    repository: dpage/pgadmin4
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"

  service:
    type: ClusterIP
    port: 80

  storage:
    enabled: true
    size: 1Gi

  config:
    defaultEmail: "admin@nexuscommerce.com"
    defaultPassword: "admin123"  # Change in production

# Redis Commander Configuration
redisCommander:
  enabled: true
  name: redis-commander
  image:
    repository: rediscommander/redis-commander
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"

  service:
    type: ClusterIP
    port: 8081

  config:
    redisHost: "redis-service.data.svc.cluster.local"
    redisPort: 6379

# Jaeger Configuration (Alternative to Zipkin)
jaeger:
  enabled: false  # Disabled by default since Zipkin is in infrastructure
  name: jaeger
  image:
    repository: jaegertracing/all-in-one
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"

  service:
    type: ClusterIP
    ports:
      ui: 16686
      collector: 14268

  storage:
    enabled: true
    size: 2Gi

# Kiali Configuration (Istio Service Mesh Observability)
kiali:
  enabled: false  # Enable if using Istio
  name: kiali
  image:
    repository: quay.io/kiali/kiali
    tag: "latest"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  service:
    type: ClusterIP
    port: 20001

# ElasticSearch (for centralized logging)
elasticsearch:
  enabled: false  # Optional
  name: elasticsearch
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: "8.11.0"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  service:
    type: ClusterIP
    port: 9200

  storage:
    enabled: true
    size: 20Gi

# Kibana (for log visualization)
kibana:
  enabled: false  # Optional
  name: kibana
  image:
    repository: docker.elastic.co/kibana/kibana
    tag: "8.11.0"
    pullPolicy: IfNotPresent

  replicas: 1

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 5601

# Storage Configuration
storage:
  enabled: true
  className: standard
  reclaimPolicy: Retain

# Security
security:
  enabled: true
  networkPolicies:
    enabled: false  # Enable for production
  rbac:
    enabled: true

# Ingress Configuration for Tools
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: tools.nexus-commerce.local
      paths:
        - path: /kafka-ui
          pathType: Prefix
          service: kafka-ui
          port: 8080
        - path: /grafana
          pathType: Prefix
          service: grafana
          port: 3000
        - path: /prometheus
          pathType: Prefix
          service: prometheus
          port: 9090
        - path: /swagger
          pathType: Prefix
          service: swagger-ui
          port: 8080
        - path: /adminer
          pathType: Prefix
          service: adminer
          port: 8080
        - path: /pgadmin
          pathType: Prefix
          service: pgadmin
          port: 80
        - path: /redis
          pathType: Prefix
          service: redis-commander
          port: 8081

# Monitoring
monitoring:
  enabled: false  # Disabled to avoid CRD issues
  prometheus:
    enabled: false
    serviceMonitor:
      enabled: false
  healthChecks:
    enabled: true