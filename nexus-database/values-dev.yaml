global:
  namespace: data
  environment: development
  storageClass: standard
  nodeSelector: {}

# MongoDB Configuration for Development
mongodb:
  enabled: true

  cart:
    enabled: true
    name: cart-mongodb
    image:
      repository: mongo
      tag: "7.0"
      pullPolicy: IfNotPresent
    replicas: 1  # Single replica for dev
    database:
      name: cartdb
    auth:
      username: cartservice
      password: cartservice123
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    storage:
      data:
        size: 2Gi  # Smaller storage for dev
      config:
        size: 500Mi
    service:
      type: ClusterIP
      port: 27017

  user:
    enabled: true
    name: user-mongodb
    image:
      repository: mongo
      tag: "7.0"
      pullPolicy: IfNotPresent
    replicas: 1  # Single replica for dev
    database:
      name: userdb
    auth:
      username: userservice
      password: userservice123
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    storage:
      data:
        size: 2Gi  # Smaller storage for dev
      config:
        size: 500Mi
    service:
      type: ClusterIP
      port: 27017

# PostgreSQL Configuration for Development
postgresql:
  enabled: true

  product:
    enabled: true
    name: product-postgres
    image:
      repository: postgres
      tag: "15.4-alpine"
      pullPolicy: IfNotPresent
    replicas: 1
    database:
      name: productdb
    auth:
      username: productservice
      password: productservice123
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    storage:
      size: 5Gi  # Smaller storage for dev
    service:
      type: ClusterIP
      port: 5432

  payment:
    enabled: true
    name: payment-postgres
    image:
      repository: postgres
      tag: "15.4-alpine"
      pullPolicy: IfNotPresent
    replicas: 1
    database:
      name: paymentdb
    auth:
      username: paymentservice
      password: paymentservice123
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    storage:
      size: 5Gi
    service:
      type: ClusterIP
      port: 5432

  order:
    enabled: true
    name: order-postgres
    image:
      repository: postgres
      tag: "15.4-alpine"
      pullPolicy: IfNotPresent
    replicas: 1
    database:
      name: orderdb
    auth:
      username: orderservice
      password: orderservice123
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    storage:
      size: 5Gi
    service:
      type: ClusterIP
      port: 5432

  loyalty:
    enabled: true
    name: loyalty-postgres
    image:
      repository: postgres
      tag: "15.4-alpine"
      pullPolicy: IfNotPresent
    replicas: 1
    database:
      name: loyalty-service
    auth:
      username: loyaltyservice
      password: loyaltyservice123
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    storage:
      size: 5Gi
    service:
      type: ClusterIP
      port: 5432

  shipping:
    enabled: true
    name: shipping-postgres
    image:
      repository: postgres
      tag: "15.4-alpine"
      pullPolicy: IfNotPresent
    replicas: 1
    database:
      name: shippingdb
    auth:
      username: shippingservice
      password: shippingservice123
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    storage:
      size: 5Gi
    service:
      type: ClusterIP
      port: 5432

# Redis Configuration for Development
redis:
  enabled: true
  name: redis-service
  image:
    repository: redis
    tag: "7.2-alpine"
    pullPolicy: IfNotPresent
  replicas: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"
  storage:
    size: 1Gi  # Smaller storage for dev
  service:
    type: ClusterIP
    port: 6379
  config:
    maxmemory: "256mb"
    maxmemoryPolicy: "allkeys-lru"
    appendonly: "yes"

# Messaging Configuration for Development
messaging:
  enabled: true

  zookeeper:
    enabled: true
    name: zookeeper
    image:
      repository: confluentinc/cp-zookeeper
      tag: "7.4.0"
      pullPolicy: IfNotPresent
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    storage:
      data:
        size: 2Gi  # Smaller storage for dev
      logs:
        size: 1Gi
    service:
      type: ClusterIP
      ports:
        client: 2181
        follower: 2888
        election: 3888

  kafka:
    enabled: true
    name: kafka
    image:
      repository: confluentinc/cp-kafka
      tag: "7.4.0"
      pullPolicy: IfNotPresent
    replicas: 1
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    storage:
      size: 5Gi  # Smaller storage for dev
    service:
      type: ClusterIP
      ports:
        kafka: 9092
        jmx: 9997
    config:
      numPartitions: 3
      defaultReplicationFactor: 1
      logRetentionHours: 24  # Shorter retention for dev
      logRetentionBytes: "536870912"  # 512MB

# Monitoring for Development
monitoring:
  enabled: true
  prometheus:
    enabled: true
