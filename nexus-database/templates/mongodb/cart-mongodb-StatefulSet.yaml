{{- if and .Values.mongodb.enabled .Values.mongodb.cart.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mongodb.cart.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nexus-database.mongodb.labels" . | nindent 4 }}
    app: {{ .Values.mongodb.cart.name }}
    service: cart-service
spec:
  serviceName: {{ .Values.mongodb.cart.name }}-headless
  replicas: {{ .Values.mongodb.cart.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.mongodb.cart.name }}
  template:
    metadata:
      labels:
        {{- include "nexus-database.mongodb.labels" . | nindent 8 }}
        app: {{ .Values.mongodb.cart.name }}
        service: cart-service
    spec:
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: mongodb
          image: "{{ .Values.mongodb.cart.image.repository }}:{{ .Values.mongodb.cart.image.tag }}"
          imagePullPolicy: {{ .Values.mongodb.cart.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mongodb.cart.service.port }}
              name: mongodb
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.cart.name }}-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.cart.name }}-secret
                  key: password
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongodb.cart.database.name }}
            - name: MONGO_INITDB_ARGS
              value: "--auth"
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-config
              mountPath: /data/configdb
          resources:
            {{- toYaml .Values.mongodb.cart.resources | nindent 12 }}
          startupProbe:
            tcpSocket:
              port: {{ .Values.mongodb.cart.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          readinessProbe:
            exec:
              command:
                - mongosh
                - --quiet
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 90
            periodSeconds: 15
            timeoutSeconds: 20
            failureThreshold: 5
          livenessProbe:
            exec:
              command:
                - mongosh
                - --quiet
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 20
            failureThreshold: 3
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: {{ .Values.mongodb.cart.name }}
                topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
        labels:
          {{- include "nexus-database.mongodb.labels" . | nindent 10 }}
          app: {{ .Values.mongodb.cart.name }}
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.global.storageClass }}
        resources:
          requests:
            storage: {{ .Values.mongodb.cart.storage.data.size }}
    - metadata:
        name: mongodb-config
        labels:
          {{- include "nexus-database.mongodb.labels" . | nindent 10 }}
          app: {{ .Values.mongodb.cart.name }}
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.global.storageClass }}
        resources:
          requests:
            storage: {{ .Values.mongodb.cart.storage.config.size }}
{{- end }}