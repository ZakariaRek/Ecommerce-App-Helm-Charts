{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nexus-database.redis.labels" . | nindent 4 }}
    app: {{ .Values.redis.name }}
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        {{- include "nexus-database.redis.labels" . | nindent 8 }}
        app: {{ .Values.redis.name }}
    spec:
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.redis.service.port }}
              name: redis-port
          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /usr/local/etc/redis
              readOnly: true
          env:
            - name: REDIS_PORT
              value: {{ .Values.redis.service.port | quote }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.redis.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: {{ .Values.redis.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 10
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ .Values.redis.name }}-pvc
        - name: redis-config
          configMap:
            name: {{ .Values.redis.name }}-config
      restartPolicy: Always
{{- end }}
