{{- if and .Values.messaging.enabled .Values.messaging.kafka.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.messaging.kafka.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nexus-database.messaging.labels" . | nindent 4 }}
    app: {{ .Values.messaging.kafka.name }}
spec:
  replicas: {{ .Values.messaging.kafka.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.messaging.kafka.name }}
  template:
    metadata:
      labels:
        {{- include "nexus-database.messaging.labels" . | nindent 8 }}
        app: {{ .Values.messaging.kafka.name }}
    spec:
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: kafka
          image: "{{ .Values.messaging.kafka.image.repository }}:{{ .Values.messaging.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.messaging.kafka.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.messaging.kafka.service.ports.kafka }}
              name: kafka
            - containerPort: {{ .Values.messaging.kafka.service.ports.jmx }}
              name: jmx
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Values.messaging.zookeeper.name }}-service:{{ .Values.messaging.zookeeper.service.ports.client }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://{{ .Values.messaging.kafka.name }}-service.{{ .Values.global.namespace }}.svc.cluster.local:{{ .Values.messaging.kafka.service.ports.kafka }}"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:{{ .Values.messaging.kafka.service.ports.kafka }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: {{ .Values.messaging.kafka.config.defaultReplicationFactor | quote }}
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: {{ .Values.messaging.kafka.config.defaultReplicationFactor | quote }}
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: {{ .Values.messaging.kafka.config.defaultReplicationFactor | quote }}
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: "1"
            - name: KAFKA_LOG_RETENTION_HOURS
              value: {{ .Values.messaging.kafka.config.logRetentionHours | quote }}
            - name: KAFKA_LOG_RETENTION_BYTES
              value: {{ .Values.messaging.kafka.config.logRetentionBytes | quote }}
            - name: KAFKA_LOG_SEGMENT_BYTES
              value: "1073741824"
            - name: KAFKA_LOG_CLEANUP_POLICY
              value: "delete"
            - name: KAFKA_LOG_COMPRESSION_TYPE
              value: "snappy"
            - name: KAFKA_NUM_PARTITIONS
              value: {{ .Values.messaging.kafka.config.numPartitions | quote }}
            - name: KAFKA_NUM_NETWORK_THREADS
              value: "2"
            - name: KAFKA_NUM_IO_THREADS
              value: "4"
            - name: KAFKA_SOCKET_SEND_BUFFER_BYTES
              value: "102400"
            - name: KAFKA_SOCKET_RECEIVE_BUFFER_BYTES
              value: "102400"
            - name: KAFKA_SOCKET_REQUEST_MAX_BYTES
              value: "104857600"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "3000"
            - name: KAFKA_HEAP_OPTS
              value: "-Xmx1G -Xms1G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:G1HeapRegionSize=16m"
            - name: KAFKA_JMX_PORT
              value: {{ .Values.messaging.kafka.service.ports.jmx | quote }}
            - name: KAFKA_JMX_HOSTNAME
              value: "{{ .Values.messaging.kafka.name }}-service.{{ .Values.global.namespace }}.svc.cluster.local"
            - name: KAFKA_LOG4J_ROOT_LOGLEVEL
              value: "WARN"
          resources:
            {{- toYaml .Values.messaging.kafka.resources | nindent 12 }}
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/logs
            - name: kafka-config
              mountPath: /etc/kafka/server.properties
              subPath: server.properties
          livenessProbe:
            tcpSocket:
              port: {{ .Values.messaging.kafka.service.ports.kafka }}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: {{ .Values.messaging.kafka.service.ports.kafka }}
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 5
          startupProbe:
            tcpSocket:
              port: {{ .Values.messaging.kafka.service.ports.kafka }}
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 20
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: {{ .Values.messaging.kafka.name }}-storage-pvc
        - name: kafka-config
          configMap:
            name: {{ .Values.messaging.kafka.name }}-config
{{- end }}