{{- if and .Values.messaging.enabled .Values.messaging.zookeeper.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.messaging.zookeeper.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nexus-database.messaging.labels" . | nindent 4 }}
    app: {{ .Values.messaging.zookeeper.name }}
spec:
  replicas: {{ .Values.messaging.zookeeper.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.messaging.zookeeper.name }}
  template:
    metadata:
      labels:
        {{- include "nexus-database.messaging.labels" . | nindent 8 }}
        app: {{ .Values.messaging.zookeeper.name }}
    spec:
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: zookeeper
          image: "{{ .Values.messaging.zookeeper.image.repository }}:{{ .Values.messaging.zookeeper.image.tag }}"
          imagePullPolicy: {{ .Values.messaging.zookeeper.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.messaging.zookeeper.service.ports.client }}
              name: client
            - containerPort: {{ .Values.messaging.zookeeper.service.ports.follower }}
              name: follower
            - containerPort: {{ .Values.messaging.zookeeper.service.ports.election }}
              name: election
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: {{ .Values.messaging.zookeeper.service.ports.client | quote }}
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOOKEEPER_INIT_LIMIT
              value: "10"
            - name: ZOOKEEPER_SYNC_LIMIT
              value: "5"
            - name: ZOOKEEPER_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
              value: "3"
            - name: ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
              value: "1"
            - name: ZOOKEEPER_ADMIN_ENABLE_SERVER
              value: "false"
            - name: ZOOKEEPER_LOG4J_ROOT_LOGLEVEL
              value: "INFO"
            - name: KAFKA_HEAP_OPTS
              value: "-Xmx256M -Xms256M"
            - name: ZOOKEEPER_4LW_COMMANDS_WHITELIST
              value: "srvr,stat,ruok,conf,cons,crst,envi,mntr,wchs,wchc,wchp,dirs"
          resources:
            {{- toYaml .Values.messaging.zookeeper.resources | nindent 12 }}
          volumeMounts:
            - name: zookeeper-data
              mountPath: /var/lib/zookeeper/data
            - name: zookeeper-logs
              mountPath: /var/lib/zookeeper/logs
            - name: zookeeper-config
              mountPath: /etc/kafka/zoo.cfg
              subPath: zoo.cfg
          livenessProbe:
            tcpSocket:
              port: {{ .Values.messaging.zookeeper.service.ports.client }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "echo srvr | nc localhost {{ .Values.messaging.zookeeper.service.ports.client }} | grep -q Mode"
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: {{ .Values.messaging.zookeeper.service.ports.client }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
      volumes:
        - name: zookeeper-data
          persistentVolumeClaim:
            claimName: {{ .Values.messaging.zookeeper.name }}-data-pvc
        - name: zookeeper-logs
          persistentVolumeClaim:
            claimName: {{ .Values.messaging.zookeeper.name }}-logs-pvc
        - name: zookeeper-config
          configMap:
            name: {{ .Values.messaging.zookeeper.name }}-config
{{- end }}
